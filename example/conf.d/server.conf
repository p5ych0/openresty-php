server {
    listen 80;

    location ^~ /.well-known/acme-challenge {
        content_by_lua_block {
            auto_ssl:challenge_server()
        }
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Internal server running on port 8999 for handling certificate tasks.
server {
    listen 127.0.0.1:8999;

    client_body_buffer_size 512k;
    client_max_body_size 512k;

    location / {
        content_by_lua_block {
            auto_ssl:hook_server()
        }
    }
}

server {
    listen 443 ssl http2;

    # Dynamic handler for issuing or returning certs for SNI domains.
    ssl_certificate_by_lua_block {
        auto_ssl:ssl_certificate()
    }

    index index.php;

    error_log /usr/local/openresty/nginx/logs/error-web.log;
    access_log /usr/local/openresty/nginx/logs/access-web.log main;

    ssl_certificate /etc/resty-auto-ssl/fallback.crt;
    ssl_certificate_key /etc/resty-auto-ssl/fallback.key;

    root /var/www/html/public;

    location ~* \.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|pdf|txt|tar|wav|bmp|rtf|flv|swf|html|svg)$ {
        access_log off;
        expires max;
        log_not_found off;
    }

    set $test "";

    if ($host !~* '^www.') {
        return 301 https://www.$host$request_uri;
    }

    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Pass the PHP scripts to FastCGI server
    location ~ ^/index.php {
        root /var/www/html/public;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
#        fastcgi_pass php:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}
