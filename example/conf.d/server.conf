# HTTP server - handles ACME challenges and redirects to HTTPS
server {
    listen 80;
    listen [::]:80;

    # ACME challenge handler for Let's Encrypt
    location ^~ /.well-known/acme-challenge {
        content_by_lua_block {
            auto_ssl:challenge_server()
        }
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Internal server for auto-ssl certificate management
server {
    listen 127.0.0.1:8999;

    client_body_buffer_size 512k;
    client_max_body_size 512k;

    location / {
        content_by_lua_block {
            auto_ssl:hook_server()
        }
    }
}

# HTTPS server with modern SSL configuration
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    # Enable HTTP/2 (modern way)
    http2 on;

    # Dynamic handler for issuing or returning certs for SNI domains
    ssl_certificate_by_lua_block {
        auto_ssl:ssl_certificate()
    }

    # Fallback certificates (will be replaced by auto-ssl)
    ssl_certificate /etc/resty-auto-ssl/fallback.crt;
    ssl_certificate_key /etc/resty-auto-ssl/fallback.key;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Basic server configuration
    index index.php index.html;
    root /var/www/html/public;

    # Use OpenResty's standard log directory
    error_log /usr/local/openresty/nginx/logs/error-web.log;
    access_log /usr/local/openresty/nginx/logs/access-web.log main;

    # Force www subdomain (optional - can be configured via environment)
    set $redirect_to_www "";
    if ($host !~* '^www\.') {
        set $redirect_to_www "1";
    }
    # Only redirect if not localhost or IP
    if ($host ~* '^(localhost|127\.0\.0\.1|.*\.local)$') {
        set $redirect_to_www "";
    }
    if ($redirect_to_www = "1") {
        return 301 https://www.$host$request_uri;
    }

    # Remove trailing slash from directories
    if (!-d $request_filename) {
        rewrite ^/(.+)/$ /$1 permanent;
    }

    # Static files with optimized caching
    location ~* \.(jpg|jpeg|gif|png|ico|webp|avif|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }

    location ~* \.(css|js|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    location ~* \.(pdf|txt|xml|zip|tgz|gz|rar|bz2|tar|wav|bmp|rtf|flv|swf)$ {
        expires 1M;
        access_log off;
        log_not_found off;
    }

    # Main location block for Laravel
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP handler for Laravel
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # Uncomment the next line when adding PHP-FPM service
        # fastcgi_pass php:9000;

        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        # FastCGI optimizations
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 60s;
        fastcgi_read_timeout 60s;

        include fastcgi_params;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /(composer\.(json|lock)|package\.json|\.env|\.git) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to Laravel sensitive directories
    location ~ ^/(storage|bootstrap/cache)/ {
        deny all;
    }
}
